import React, { useState } from 'react';
import { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';

const PaymentPage = () => {
  const stripe = useStripe();
  const elements = useElements();

  const [loading, setLoading] = useState(false);

  const handleSubmit = async (event) => {
    event.preventDefault();

    if (!stripe || !elements) {
      // Stripe.js has not loaded yet. Make sure to disable
      // form submission until Stripe.js has loaded.
      return;
    }

    setLoading(true);

    const { token, error } = await stripe.createToken(elements.getElement(CardElement));

    setLoading(false);

    if (error) {
      console.error(error);
    } else {
      // Send the token to your server to process the payment
      // This is where you would make a request to your server to handle the payment
      // For example, using fetch or axios
      // Replace 'YOUR_SERVER_ENDPOINT' with the actual endpoint on your server
      fetch('YOUR_SERVER_ENDPOINT', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ token: token.id }),
      })
        .then((response) => response.json())
        .then((data) => {
          console.log('Payment Successful:', data);
          // Redirect or show a success message to the user
        })
        .catch((error) => {
          console.error('Error:', error);
          // Handle errors and show an error message to the user
        });
    }
  };

  return (
    <div>
      <h2>Payment Page</h2>
      <form onSubmit={handleSubmit}>
        <label>
          Card details
          <CardElement />
        </label>

        <button type="submit" disabled={loading}>
          {loading ? 'Processing...' : 'Pay Now'}
        </button>
      </form>
    </div>
  );
};

export default PaymentPage;
